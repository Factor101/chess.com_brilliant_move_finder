const Puppeteer = require('puppeteer');
const Process = require("process");
const ChessWebAPI = new (require('chess-web-api'))();
const readlineSync = require('readline-sync');
const useProxy = require('puppeteer-page-proxy');
const proxyCheck = require('nodejs-proxy-check');

let username;

const proxies = ["141.101.123.125:80", "203.30.191.184:80", "203.24.109.81:80", "203.32.121.66:80", "203.32.120.91:80", "173.208.40.12:8118", "14.241.225.167:443", "45.131.4.23:80", "45.131.5.211:80", "132.255.210.122:999", "181.225.101.6:999", "103.151.30.89:8080", "84.54.185.203:8080", "23.227.38.154:80", "103.166.10.12:8181", "45.12.31.141:80", "172.67.212.157:80", "172.64.172.144:80", "46.151.108.69:8081", "141.101.115.252:80", "45.131.4.126:80", "23.227.38.33:80", "203.22.223.223:80", "185.238.228.80:80", "172.67.231.3:80", "14.20.235.61:808", "203.30.189.130:80", "103.156.141.239:3125", "45.14.174.155:80", "203.147.19.10:80", "203.24.108.25:80", "203.30.190.193:80", "8.208.90.243:4435", "45.8.107.76:80", "203.24.108.108:80", "143.0.67.18:8080", "141.101.120.243:80", "119.9.104.72:7497", "203.34.28.194:80", "203.23.104.183:80", "180.211.91.40:3125", "45.131.5.196:80", "203.28.8.99:80", "203.22.223.213:80", "187.189.175.136:999", "203.28.8.103:80", "182.106.220.252:9091", "185.238.228.5:80", "36.67.114.94:80", "172.67.22.240:80", "203.32.120.97:80", "188.114.96.88:80", "141.101.121.72:80", "23.227.39.125:80", "66.235.200.154:80", "50.206.25.107:80", "85.25.198.20:5566", "41.57.48.1:8080", "45.8.107.235:80", "203.23.103.224:80", "141.193.213.66:80", "23.227.39.93:80", "203.30.191.101:80", "45.233.67.226:999", "203.28.9.1:80", "114.130.78.185:8080", "178.62.229.24:21368", "36.89.158.94:4480", "85.90.246.238:10000", "203.23.104.3:80", "172.67.177.231:80", "172.67.177.1:80", "172.67.188.18:80", "141.193.213.216:80", "203.28.9.231:80", "185.162.231.138:80", "118.38.92.156:80", "203.30.190.229:80", "45.12.30.160:80", "43.243.174.3:83", "45.8.106.62:80", "189.243.6.86:8080", "203.30.188.92:80", "172.67.181.252:80", "107.152.163.244:3128", "172.67.151.71:80", "47.109.51.138:80", "217.219.74.130:8888", "188.114.96.59:80", "203.23.103.158:80", "177.240.22.46:8080", "38.10.247.42:999", "91.227.183.110:80", "91.226.97.242:80", "203.24.102.159:80", "45.14.174.42:80", "80.194.38.106:3333", "185.162.229.82:80", "203.34.28.47:80", "187.102.219.136:999", "45.8.104.74:80", "192.3.245.43:3128", "172.67.214.15:80", "203.23.104.64:80", "37.57.15.43:33761", "187.94.211.214:8080", "45.12.30.113:80", "141.193.213.235:80", "203.24.109.230:80", "45.88.159.79:8081", "183.88.9.74:8080", "185.162.229.186:80", "154.73.159.10:8585", "14.97.89.206:8080", "27.184.50.94:8089", "172.67.181.213:80", "38.10.246.86:999", "124.105.55.174:8080", "131.72.69.34:45005", "103.159.92.138:1080", "45.8.104.125:80", "143.137.83.137:999", "203.13.32.51:80", "111.68.24.113:3127", "185.162.229.32:80", "31.43.179.68:80", "185.162.229.173:80", "36.89.158.91:4480", "172.67.43.217:80", "130.61.104.111:80", "141.101.120.34:80", "213.226.11.149:41878", "141.101.121.2:80", "91.226.97.212:80", "172.67.167.98:80", "203.28.9.143:80", "185.162.230.65:80", "132.226.234.188:8443", "203.24.102.104:80", "172.67.179.199:80", "23.94.98.201:8080", "191.101.251.96:80", "45.8.107.83:80", "213.168.180.211:8080", "185.162.231.202:80", "203.30.190.186:80", "172.64.139.2:80", "203.24.103.253:80", "168.195.99.5:8080", "103.196.30.225:8080", "72.55.155.80:80", "203.22.223.26:80", "203.24.109.189:80", "23.227.39.228:80", "20.26.27.45:3128", "203.24.102.217:80", "119.252.171.50:8080", "141.101.122.147:80", "103.21.244.241:80", "198.12.122.226:3128", "154.236.168.169:1981", "188.114.97.3:80", "185.162.231.198:80", "191.101.251.178:80", "45.179.187.111:8083", "117.114.149.66:55443", "36.99.192.31:9002", "181.215.178.59:1337", "105.112.95.133:8080", "172.67.3.132:80", "172.67.182.37:80", "45.8.104.215:80", "172.67.177.207:80", "172.67.0.6:80", "121.13.252.61:41564", "50.217.153.72:80", "203.30.190.214:80", "63.151.67.7:8080", "103.69.216.17:8080", "172.64.168.168:80", "203.28.9.41:80", "209.166.175.201:8080", "220.247.171.90:81", "185.162.229.71:80", "185.162.229.98:80", "200.58.87.194:808", "183.88.3.130:8080", "141.101.121.1:80", "45.8.104.183:80", "31.43.179.237:80", "203.34.28.28:80", "203.30.188.127:80", "141.101.123.77:80", "45.8.107.135:80", "132.226.234.188:8443", "188.114.96.250:80", "31.43.179.108:80", "45.8.105.140:80", "103.115.23.66:8080", "135.12.192.157:3128", "103.16.133.226:8080", "203.13.32.145:80", "203.13.32.222:80", "154.239.1.77:1976", "101.255.127.11:8080", "203.34.28.55:80", "203.30.191.211:80", "191.101.251.163:80", "172.67.75.184:80", "185.162.231.130:80", "203.13.32.150:80", "203.13.32.201:80", "190.128.129.10:8080", "203.24.103.113:80", "203.30.190.41:80", "78.38.93.152:3128", "203.23.104.73:80", "172.67.70.255:80", "203.24.109.169:80", "203.34.28.76:80", "203.28.8.47:80", "172.67.167.46:80", "203.30.190.105:80", "45.8.106.74:80", "172.67.179.197:80", "185.15.172.212:3128", "203.23.106.46:80", "45.8.105.220:80", "191.101.251.40:80", "172.67.181.140:80", "185.162.230.201:80", "203.32.121.27:80", "63.141.128.86:80", "31.43.179.104:80", "172.67.170.13:80", "8.213.128.90:8080", "203.24.103.135:80", "80.65.28.57:30962", "49.156.47.162:8080", "45.235.46.94:8080", "45.131.7.253:80", "45.171.144.221:8080", "51.223.248.225:8080", "103.188.10.26:3125", "220.160.55.172:3128", "141.101.120.249:80", "45.8.104.4:80", "185.162.228.108:80", "190.187.201.26:8080", "173.245.49.15:80", "172.67.255.59:80", "159.112.235.162:80", "103.171.149.66:3125", "172.67.70.67:80", "177.93.39.253:999", "188.114.96.94:80", "203.30.190.99:80", "45.131.4.200:80", "203.23.103.45:80", "72.169.65.13:87", "203.28.8.209:80", "178.176.193.56:1080", "141.101.121.238:80", "203.23.104.49:80", "183.88.73.176:8080", "103.132.53.176:3127", "160.202.145.161:3629", "203.28.8.190:80", "23.227.38.20:80", "203.24.108.112:80", "172.67.181.2:80", "103.21.244.185:80", "172.67.229.43:80", "91.226.97.157:80", "203.30.188.207:80", "31.43.179.162:80", "103.139.193.95:8085", "203.28.9.200:80", "203.28.8.41:80", "203.24.102.238:80", "45.8.107.232:80", "185.162.228.68:80", "203.24.103.224:80", "45.12.30.75:80", "50.220.21.202:80", "182.132.25.155:8118", "45.8.107.37:80", "124.158.167.242:8080", "45.12.30.18:80", "203.30.189.39:80", "141.101.121.108:80", "185.162.228.147:80", "206.62.64.34:8080", "185.238.228.186:80", "41.254.45.128:8080", "23.227.38.183:80", "103.124.198.134:3125", "220.87.222.238:8118", "203.30.190.2:80", "103.21.244.30:80", "203.24.109.226:80", "45.12.30.240:80", "159.65.116.119:30199", "203.13.32.45:80", "203.24.109.22:80", "172.67.44.22:80", "203.23.106.192:80", "14.192.1.198:83", "172.67.177.223:80", "141.101.121.176:80", "203.30.188.77:80", "83.171.114.92:45822", "172.67.177.252:80", "172.67.106.215:80", "194.145.138.60:9090", "172.67.159.96:80", "45.12.30.188:80", "172.67.182.38:80", "120.89.90.198:8080", "23.227.38.16:80", "172.64.198.124:80", "203.30.191.112:80", "69.11.145.106:8080", "31.43.179.202:80", "185.162.228.154:80", "23.227.38.246:80", "45.8.105.145:80", "94.247.241.70:53640", "172.67.0.66:80", "45.8.106.130:80", "102.68.131.113:8080", "172.67.206.72:80", "202.21.109.141:1012", "172.67.191.224:80", "172.67.75.182:80", "107.172.238.12:3128", "95.216.17.79:3888", "103.215.207.38:82", "203.24.102.82:80", "172.67.176.149:80", "203.30.188.164:80", "172.67.182.104:80", "203.24.108.64:80", "167.250.160.166:8080", "45.8.104.53:80", "45.8.106.217:80", "172.67.192.5:80", "203.23.106.115:80", "203.24.108.11:80", "172.67.3.124:80", "157.230.241.133:33273", "203.24.108.186:80", "171.241.12.225:4002", "185.238.228.26:80", "168.0.239.224:8787", "203.30.189.37:80", "141.101.121.59:80", "172.67.176.160:80", "172.67.165.119:80", "45.131.7.4:80", "91.226.97.30:80", "182.253.109.41:8080", "103.197.251.202:80", "203.34.28.157:80", "45.114.39.25:8080", "203.30.189.109:80", "203.24.103.84:80", "172.67.181.138:80", "172.67.192.16:80", "203.24.109.230:80", "203.24.103.120:80", "36.95.15.147:8080", "143.202.78.177:999", "27.111.45.29:55443", "193.117.138.126:44805", "172.67.43.169:80", "173.245.49.99:80", "203.34.28.240:80", "185.162.231.75:80", "141.101.120.32:80", "194.145.138.153:9090", "203.23.106.104:80", "45.14.174.10:80", "103.44.156.62:8080", "23.227.38.35:80", "203.13.32.158:80", "141.101.122.149:80", "172.67.214.66:80", "112.78.137.106:8080", "66.235.200.219:80", "119.18.158.131:4153", "34.27.17.1:3128", "203.23.106.168:80", "45.12.31.16:80", "172.67.3.104:80", "172.64.169.201:80", "140.227.127.205:80", "172.67.40.241:80", "123.182.59.96:8089", "91.226.97.105:80", "203.24.103.230:80", "45.14.174.230:80", "203.22.223.87:80", "185.226.118.125:8080", "186.80.144.198:8080", "141.101.122.113:80", "203.28.8.220:80", "45.12.31.63:80", "45.8.107.173:80", "41.57.37.12:8080", "91.226.97.12:80", "172.64.130.2:80", "186.125.218.236:999", "203.32.120.227:80", "120.237.144.200:9091", "172.67.191.234:80", "203.24.109.81:80", "203.34.28.135:80", "23.227.39.74:80", "203.30.190.235:80", "203.30.189.74:80", "203.30.189.44:80", "120.28.195.40:8282", "191.101.251.151:80", "91.226.97.253:80", "185.162.230.96:80", "91.226.97.84:80", "165.73.128.225:56975", "45.8.104.173:80", "185.162.228.237:80", "203.34.28.50:80", "185.19.4.22:3128", "182.253.36.60:8080", "188.133.137.109:1256", "103.79.155.6:8080", "37.120.140.158:3128", "67.206.206.2:999", "45.114.37.25:8080", "201.71.2.112:999", "172.67.171.217:80", "103.108.9.213:8080", "45.12.30.101:80", "203.24.108.27:80", "124.13.181.4:80", "135.12.201.226:3128", "185.162.229.78:80", "203.22.223.232:80", "172.67.3.78:80", "190.93.247.5:80", "45.8.107.223:80", "202.153.233.228:8080", "203.24.108.187:80", "180.250.252.221:8080", "176.115.197.118:8080", "203.30.190.177:80", "191.101.251.49:80", "203.24.102.194:80", "188.114.98.31:80", "203.13.32.141:80", "212.126.106.230:8889", "45.14.174.55:80", "103.146.207.14:8080", "45.12.30.57:80", "203.24.103.241:80", "185.243.174.26:8080", "141.101.121.47:80", "172.67.32.170:80", "172.64.136.64:80", "195.154.106.167:80", "141.193.213.29:80", "141.101.120.90:80", "188.132.222.41:8080", "1.4.251.198:8080", "201.77.108.160:999", "203.34.28.158:80", "23.227.38.9:80", "172.67.182.2:80", "144.48.178.241:83", "45.231.170.137:999", "172.67.177.191:80", "185.162.229.175:80", "81.91.136.76:8080", "141.101.115.243:80", "185.162.229.137:80", "31.43.179.171:80", "172.67.254.254:80", "103.155.196.131:3125", "159.112.235.247:80", "172.67.0.66:80", "124.158.167.242:8080", "139.180.140.254:1080", "185.238.228.5:80", "159.112.235.39:80", "185.238.228.199:80", "45.8.105.36:80", "45.8.107.7:80", "213.226.11.149:41878", "203.28.8.94:80", "202.138.242.6:38373", "41.65.0.217:1981", "185.162.231.81:80", "172.67.180.24:80", "141.101.123.165:80", "203.24.109.96:80", "203.23.103.15:80", "203.30.191.41:80", "165.16.43.63:8080", "203.22.223.48:80", "159.112.235.41:80", "172.64.84.87:80", "23.227.38.63:80", "172.67.26.8:80", "185.162.231.140:80", "172.67.192.13:80", "174.138.26.182:443", "81.218.45.202:8080", "178.79.191.47:5441", "180.193.213.42:8080", "172.67.176.88:80", "77.38.21.239:8080", "72.169.66.137:87", "203.24.109.63:80", "50.169.135.10:80", "203.23.106.216:80", "172.67.3.117:80", "45.14.174.192:80", "45.8.104.246:80", "172.67.177.23:80", "203.23.103.85:80", "45.8.106.103:80", "45.8.105.130:80", "45.12.31.38:80", "186.24.9.114:999", "45.12.31.252:80", "93.105.40.62:41258", "103.131.157.174:8080", "185.162.229.155:80", "91.226.97.89:80", "103.194.242.42:8080", "91.226.97.174:80", "138.128.122.164:3128", "203.24.108.64:80", "45.8.104.121:80", "47.75.127.149:8888", "189.198.250.210:999", "103.160.201.76:8080", "177.20.215.114:8080", "185.58.18.225:8080", "45.12.30.207:80", "172.67.43.202:80", "107.182.234.141:19235", "172.67.133.8:80", "222.74.73.202:42055", "103.178.224.3:8085", "203.28.9.101:80", "172.67.166.241:80", "172.67.167.131:80", "144.126.137.16:3128", "172.67.210.132:80", "176.115.197.118:8080", "203.13.32.52:80", "203.24.109.251:80", "179.189.125.222:8080", "203.30.189.21:80", "203.30.190.113:80", "185.162.231.148:80", "91.226.97.151:80", "103.159.220.141:443", "203.23.106.43:80", "27.79.61.71:1080", "172.67.182.49:80", "191.101.251.106:80", "188.132.222.35:8080", "159.112.235.123:80", "23.227.38.100:80", "203.30.191.160:80", "172.67.187.246:80", "159.138.252.45:8080", "203.22.223.229:80", "203.13.32.5:80", "112.78.170.251:80", "191.101.251.111:80", "203.30.188.144:80", "45.231.220.71:999", "45.12.31.57:80", "3.34.13.110:80", "213.212.247.204:1981", "203.23.106.42:80", "165.22.60.129:34311", "94.24.242.194:8080", "203.30.191.111:80", "45.14.174.106:80", "54.159.220.163:80", "135.12.206.46:3128", "190.26.217.126:8080", "45.8.104.64:80", "185.162.231.40:80", "185.162.231.250:80", "50.223.148.162:80", "141.101.121.68:80", "203.24.109.17:80", "203.32.121.6:80", "203.24.103.44:80", "149.5.38.77:8080", "103.245.198.54:8080", "172.67.140.91:80", "51.79.41.132:10061", "203.23.103.96:80", "203.23.104.114:80", "203.30.189.66:80", "203.13.32.193:80", "23.227.38.244:80", "172.67.182.28:80", "45.8.106.190:80", "103.106.216.174:3125", "142.44.148.56:8080", "203.28.9.246:80", "173.245.49.89:80", "194.145.138.183:9090", "203.13.32.142:80", "201.77.109.129:999", "185.162.230.80:80", "45.8.107.209:80", "203.30.191.112:80", "103.130.104.62:83", "203.24.108.115:80", "37.120.239.221:3128", "172.67.224.254:80", "181.78.104.180:999", "172.67.180.16:80", "103.28.121.58:80", "172.67.167.218:80", "172.67.138.138:80", "36.90.104.50:3128", "37.139.26.54:3128", "203.32.121.7:80", "45.8.104.106:80", "45.12.31.70:80", "141.101.121.156:80", "151.80.136.138:3128", "196.44.117.52:8080", "141.101.123.161:80", "36.92.85.66:8080", "172.67.146.243:80", "160.3.168.70:8080", "203.22.223.12:80", "111.225.152.55:8089", "172.64.134.2:80", "106.225.179.5:9002", "31.43.179.244:80", "185.162.230.230:80", "185.162.229.91:80", "188.114.96.67:80", "187.94.211.214:8080", "202.59.164.61:8080", "172.67.170.194:80", "203.23.106.101:80", "103.119.55.21:8082", "178.167.81.46:55443", "203.30.189.182:80", "141.101.121.15:80", "103.21.244.14:80", "190.93.246.9:80", "31.43.179.220:80", "203.23.104.129:80", "202.169.254.229:8080", "172.67.181.61:80", "172.67.188.38:80", "91.226.97.108:80", "203.34.28.184:80", "109.107.155.131:8090", "203.32.120.236:80", "141.101.120.111:80", "203.23.106.185:80", "203.24.103.250:80", "175.144.198.226:31694", "172.67.181.123:80", "103.160.132.26:84", "203.30.189.111:80", "172.67.3.61:80", "14.205.208.184:8085", "175.138.229.109:3128", "172.67.3.118:80", "172.67.4.36:80", "203.30.188.159:80", "185.238.228.1:80", "103.162.62.18:3125", "172.67.43.156:80", "23.88.59.122:3128", "203.30.191.62:80", "175.101.80.140:8080", "172.67.75.180:80", "141.101.115.251:80", "50.217.22.107:80", "97.74.92.60:80", "195.3.246.209:3128", "135.12.201.232:3128", "45.8.107.112:80", "172.67.201.101:80", "209.127.104.60:3000", "200.116.226.210:57089", "141.193.213.60:80", "203.30.190.144:80", "172.67.3.133:80", "191.98.179.22:3128", "103.153.136.60:8080", "51.79.41.132:10049", "159.112.235.30:80", "80.249.187.85:8080", "172.67.185.192:80", "186.148.180.61:999", "172.67.181.171:80", "172.67.3.98:80", "203.23.104.66:80", "141.193.213.69:80", "188.114.97.17:80", "185.162.228.51:80", "154.236.184.81:1981", "45.8.107.204:80", "200.217.165.114:8080", "31.43.179.214:80", "185.238.228.178:80", "203.23.106.57:80", "23.227.39.215:80", "203.24.109.88:80", "87.110.237.97:44692", "45.8.105.94:80", "203.24.109.106:80", "91.226.97.32:80", "203.24.108.156:80", "24.72.171.214:8080", "203.13.32.227:80", "45.8.105.247:80", "203.23.106.172:80", "36.255.84.5:84", "203.30.191.174:80", "203.23.106.168:80", "203.30.188.36:80", "172.67.254.133:80", "203.30.188.25:80", "172.67.177.22:80", "172.67.182.28:80", "12.105.136.2:8080", "203.23.103.247:80", "200.48.3.227:10101", "185.162.231.213:80", "185.162.228.10:80", "203.32.121.98:80", "102.176.103.134:8080", "141.101.120.236:80", "45.12.30.11:80", "203.24.109.93:80", "203.28.9.172:80", "144.126.137.16:3128", "45.8.107.245:80", "203.24.102.38:80", "141.101.122.192:80", "185.162.228.63:80", "45.8.107.154:80", "103.155.54.73:83", "101.200.220.107:8080", "170.79.235.3:999", "23.227.38.176:80", "139.59.249.244:7777", "203.23.104.162:80", "200.7.11.105:8080", "172.67.72.47:80", "117.160.250.133:80", "103.215.207.81:83", "203.30.189.50:80", "181.78.15.105:999", "203.13.32.205:80", "154.236.184.71:1974", "172.67.0.21:80", "45.12.30.0:80", "203.28.9.81:80", "185.162.231.102:80", "196.27.106.112:8080", "14.241.39.165:19132", "91.226.97.74:80", "115.127.162.234:8080", "203.34.28.208:80", "190.93.247.58:80", "141.101.123.251:80", "172.67.182.77:80", "185.162.231.19:80", "203.24.108.8:80", "103.21.244.92:80", "212.230.172.6:80", "203.24.103.136:80", "45.8.104.87:80", "45.12.31.159:80", "23.227.38.128:80", "179.60.235.251:8094", "45.14.174.222:80", "141.101.120.239:80", "172.67.169.151:80", "203.30.189.49:80", "193.29.53.26:3128", "141.101.120.145:80", "58.221.193.74:8888", "195.224.107.165:8080", "203.23.103.57:80", "203.28.9.172:80", "203.30.190.244:80", "203.24.109.3:80", "141.193.213.156:80", "135.12.196.149:3128", "118.212.152.82:9091", "88.255.217.6:8080", "201.150.119.64:999", "185.162.231.244:80", "185.162.231.21:80", "172.67.12.34:80", "23.227.38.128:80", "201.243.82.210:999", "191.52.213.1:999", "119.81.71.27:80", "169.239.223.136:52178", "45.170.102.1:999", "185.162.229.207:80", "203.23.103.132:80", "50.228.141.98:80", "45.8.106.0:80", "103.153.130.230:80", "141.193.213.15:80", "203.28.9.146:80", "89.237.32.65:37647", "45.8.106.200:80", "14.205.208.74:8085", "47.254.237.222:2080", "45.12.31.208:80", "117.54.10.86:2019", "172.67.176.168:80", "203.23.106.6:80", "178.79.191.47:5441", "114.55.89.245:8118", "135.12.202.69:3128", "203.28.8.43:80", "203.24.102.69:80", "203.23.104.100:80", "185.162.231.224:80", "185.162.230.239:80", "203.13.32.51:80", "141.101.121.43:80", "154.0.14.193:8080", "172.67.134.123:80", "173.245.49.43:80", "200.123.157.37:8080", "203.24.108.254:80", "23.227.38.236:80", "172.66.47.23:80", "203.32.120.29:80", "212.3.135.57:8080", "172.67.177.22:80", "203.30.191.72:80", "172.67.6.144:80", "141.101.122.111:80", "103.145.45.10:55443", "172.67.181.26:80", "45.131.6.171:80", "185.162.230.93:80", "89.111.105.105:41258", "203.30.190.120:80", "141.101.123.200:80", "41.220.238.137:83", "185.237.99.218:61443", "203.24.109.204:80", "180.211.91.46:3125", "172.67.254.147:80", "45.248.27.145:8080", "107.1.93.217:80", "45.8.105.152:80", "61.19.145.66:8080", "205.201.49.132:53281", "50.217.110.226:80", "200.125.170.227:999", "120.28.81.13:8080", "45.8.104.46:80", "125.74.28.71:9002", "172.67.180.155:80", "68.183.230.116:39517", "203.24.102.236:80", "91.93.42.120:10001", "85.117.56.151:8080", "172.67.182.143:80", "203.30.190.17:80", "45.8.104.245:80", "167.172.96.117:33747", "203.32.121.43:80", "103.65.237.150:3125", "103.134.79.105:8383", "45.12.31.134:80", "45.14.174.144:80", "31.43.179.192:80", "103.239.52.78:8080", "45.12.30.29:80", "122.50.7.186:8080", "203.30.190.182:80", "203.23.106.201:80", "191.101.251.123:80", "31.43.179.86:80", "117.102.81.2:53281", "203.32.120.242:80", "203.32.120.148:80", "203.24.103.168:80", "37.238.130.50:61817", "172.64.142.85:80", "103.243.177.90:8080", "203.32.120.175:80", "172.67.181.10:80", "141.101.121.241:80", "47.74.71.208:8080", "141.101.123.68:80", "190.93.246.247:80", "161.132.122.62:999", "141.193.213.28:80", "103.153.190.78:8081", "45.12.30.201:80", "110.39.179.230:8080", "172.67.221.213:80", "45.8.105.227:80", "172.64.200.75:80", "51.158.68.133:8811"]
    .map(e => `http://${e}`);

(async () => {
    /*
    username = readlineSync.question( "Enter your Chess.com username: ");
    let year = readlineSync.question( "Enter what year you want to import games from: ");
    let month = readlineSync.question( "Enter what month you want to import games from, as a number: ");
*/
    for(const e of proxies) {
        break;
        const proxy = {
            host: e.match(/http:\/\/(.*)/)[1].split(":")[0],
            port: Number(e.match(/http:\/\/(.*)/)[1].split(":")[1]),
            type: "HTTP"
        };
        console.log(proxy)
        await proxyCheck(proxy).then(r => {
            console.log(r); // true
        }).catch(e => {
            console.error(e); // ECONNRESET
        });
    }

    username = "Factor101";
    let year = 2022;
    let month = 11;

    const res = await ChessWebAPI.getPlayerCompleteMonthlyArchives(
        username,
        year,
        month
    ).catch(err => {
        console.error(err.message);
        Process.exit(-1);
    });

    // noinspection JSUnresolvedVariable
    const games = res.body.games.reverse();
    const brilliantGames = [];

    const browser = await Puppeteer.launch({
        headless: true,
        args: ['--disable-web-security', "--no-sandbox"],
        defaultViewport: null
    });

    console.log("[x] Starting to analyze games...");

    let i = 0;
    for (const e of games)
    {
        const page = await browser.newPage();
        await useProxy(page, proxies[Math.floor(Math.random() * proxies.length)]);
        console.log(`[x] Analyzing game ${i + 1} of ${games.length} (${((i + 1) / games.length * 100).toString().replace(/(?<=\.)(\d+)(?<=\d{3,})$/, (matched, group) => group.substr(0, 2))} % complete)...`);
        await page.goto(`https://www.chess.com/analysis/game/live/${e.url.match(/\/(\d+)$/)[1]}?tab=review`);

        let tries = 0;
        let failed = false;
        while(
            !(await page.evaluate(
                () => document.querySelectorAll(".review-view-section.review-view-movelist").length !== 0
            ))
        ) {
            await page.waitForTimeout(1000);
            if(++tries >= 10) {
                console.log(`\t[x] Failed to load analysis for game ${++i} of ${games.length}...`);
                failed = true;
                break;
            }
        }
        if(failed) {
            await page.close();
            continue;
        }

        const nBrilliantMoves = await page.evaluate(() => document.querySelectorAll(".move-list-node-text.analysis-brilliant").length);
        if(nBrilliantMoves !== 0) {
            // noinspection JSUnresolvedVariable
            brilliantGames.push(new Game(e.url, e.pgn, e.time_control, e.time_class, e.rated, e.accuracies, nBrilliantMoves));
            console.log(`\t[>] Game ${i + 1} of ${games.length} has ${nBrilliantMoves} brilliant move${nBrilliantMoves > 1 ? 's' : ''}!`);
        }
        await page.close();
        i++;
    }
    await browser.close();

    console.log("[x] Finished analyzing games!");
    console.log("----------------------------------------");
    brilliantGames.forEach((e, i) => {
        console.log(
            `[x] #${i + 1} - ${e.nBrilliantMoves} brilliant moves` +
            ` | Vs. ${e.opponent}` +
            ` | Result: ${e.result}` +
            ` | ${e.getTimeControlPrintable()} ${e.timeClass}` +
            ` | ${e.rated ? "Rated" : "Unrated"}` +
            ` | Accuracy: ${e.playerAccuracy}%` +
            ` | (url: ${e.url})`
        );
    });
})();

/**
 * @constructor
 *
 * @property {string} url
 * @property {string} pgn
 * @property {string} timeControl - Time control of game, formatted as Seconds+Increment
 * @property {string} timeClass - Time class of game e.g. rapid, blitz, bullet, correspondence
 * @property {boolean} rated - Whether the game was rated
 * @property {Object<white: float, black: float>} accuracies - Accuracy of each player
 * @property {"White" | "Black"} playerColor - Color of the player in game
 * @property {"Win" | "Loss" | "Draw"} result - Result of the game
 * @property {number} nBrilliantMoves - Number of brilliant moves in the game
 * @property {float} accuracy - Accuracy of the player in game
 * @property {string} opponent - Username of the opponent
 *
 * @method {string} getTimeControlPrintable - Returns a printable version of the time control
 *
 *
 * @returns {Game}
 */
function Game(url, pgn, timeControl, timeClass, rated, accuracies, nBrilliantMoves)
{
    initializer(this, arguments);
    this.playerColor = (new RegExp(`\\[White\\s"${username}"\]$`, "mi")).test(pgn) ? "White" : "Black";
    this.result = pgn.match(/\[Result\s"(\d\/?\d?)-(\d\/?\d?)"]/mi)[1] === "1" ? this.playerColor === "White" ? "Win" : "Loss" : "Draw";
    this.timeClass = this.timeClass.charAt(0).toUpperCase() + this.timeClass.slice(1);
    this.playerAccuracy = parseFloat(accuracies[this.playerColor.toLowerCase()].toString().replace(/\.0+$/, ""));
    this.opponent = (new RegExp(`\\[${this.playerColor === "White" ? "Black" : "White"}\\s"([a-z0-9_\\-]+)"\]$`, "mi")).exec(pgn)[1];

    this.getTimeControlPrintable = function()
    {
        const times = this.timeControl.match(/(\d+)/g);
        const minutes = Math.floor(times[0] / 60);
        const seconds = times[0] - (minutes * 60);

        return seconds !== 0 ? `${minutes}m ${seconds}s + ${times[1]}s` : `${minutes}m + ${times[1]}s`;
    }
}

/**
 *
 * @description defines the arguments provided to a constructor as properties of the object being constructed (initializer list)
 *
 * @param {Object} instance - instance of an object
 * @param {IArguments} passedArgs - arguments passed to the object's constructor
 *
 */
function initializer(instance, passedArgs)
{
    /\(([\w\s,]*)\)/gmi.exec(instance.constructor.toString())[1]
        .split(", ").forEach(function(e, i) {
            instance[e] = passedArgs[i];
        });
}